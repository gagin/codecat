# Example ~/.config/codecat/config.toml

# The introductory text placed at the very beginning of the output.
header_text = "Codebase for analysis:"

# List of file extensions (without leading dot) to include by default during scans.
# Command-line flags (-e) will override these.
include_extensions = [
    "go", "mod", "sum", # Go project files
    "py", "ipynb",      # Python
    "js", "ts", "jsx", "tsx", "html", "css", "json", "yaml", "yml", # Web dev
    "md", "rst", "txt", # Documentation/Text
    "sh", "bash",       # Shell scripts
    "toml",             # Config files
    "dockerfile", "Dockerfile"
]

# List of glob patterns to exclude by default during scans.
# These apply relative to the target directory.
# Manually added files (-f) are NOT affected by these.
# Command-line flags (-x) will override these.
# Examples:
exclude_patterns = [
    "*.log",             # Exclude all log files
    "dist/*",            # Exclude build output directory contents
    "node_modules/*",    # Exclude node_modules
    "venv/*",            # Exclude python virtual envs
    ".git/*",            # Exclude git directory contents (often handled by gitignore too)
    "__pycache__/*",
    ".pytest_cache/*",
    "*.pyc",
    "*.pyo",
    "temp/",             # Exclude a directory named temp (relative to target)
    "specific_file_to_exclude.txt"
]

# The marker used to delimit file sections in the output.
# Make sure it's unlikely to appear naturally at the start/end of lines in your code.
comment_marker = "---" # Example: Use --- filename ---

# Whether to respect .gitignore files found in the target directory by default.
# Set to false to disable .gitignore processing by default.
# Can be overridden by the --no-gitignore command-line flag.
use_gitignore = true

